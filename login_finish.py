# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_finish.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5.QtCore import Qt, QPoint
from PyQt5.QtGui import QMouseEvent, QMovie, QColor

import MainWindow
import resources_rc
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
import sys

class Finish_Window(QMainWindow):

    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.retranslateUi(self)
        self.setWindowOpacity(0.95)  # 设置窗口透明度
        self.setWindowFlags(Qt.FramelessWindowHint)  # 隐藏边框
        self.setAttribute(Qt.WA_TranslucentBackground)  # 窗体背景透明
        self.add_shadow()

        # 重写移动事件

    def mouseMoveEvent(self, e: QMouseEvent):
        if self._tracking:
            self._endPos = e.pos() - self._startPos
            self.move(self.pos() + self._endPos)

    def mousePressEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._startPos = QPoint(e.x(), e.y())
            self._tracking = True

    def mouseReleaseEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._tracking = False
            self._startPos = None
            self._endPos = None

    def backView(self):
        self.hide()
        self.mainWindow = MainWindow.Ui_MainWindow()
        self.mainWindow.show()


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(270+10, 230+10)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.background = QtWidgets.QLabel(self.centralwidget)
        self.background.setGeometry(QtCore.QRect(0+10, 0+10, 260, 220))
        self.background.setStyleSheet("background-color: rgb(125, 200, 158);\n"
"border-radius:20px;")
        self.background.setText("")
        self.background.setObjectName("background")
        self.Exit = QtWidgets.QPushButton(self.centralwidget)
        self.Exit.setGeometry(QtCore.QRect(223+10, 10+10, 26, 26))
        self.Exit.setStyleSheet("border-radius:10px;\n"
"background-color: rgb(255, 255, 255);\n"
"font: 9pt \"01FLOPDESIGN\";")
        self.Exit.setObjectName("Exit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110+10, 60+10, 50, 50))
        # self.label.setText("")
        # self.label.setObjectName("label")
        self.gif = QMovie(":/image/resource/finish.gif")
        self.gif.setScaledSize(self.label.size())
        self.label.setMovie(self.gif)
        self.gif.start()
        self.pushButton_finish = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_finish.setGeometry(QtCore.QRect(30+10, 160+10, 200, 40))
        self.pushButton_finish.setStyleSheet("#pushButton_finish{\n"
"    selection-color: rgb(0, 170, 127);\n"
"    background-color:rgb(82, 156, 113);\n"
"    border-radius:20px;\n"
"    font: 16pt \"幼圆\";\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"#pushButton_finish{\n"
"    padding_top:20px;\n"
"}\n"
            "#pushButton_finish:hover{\n"
            "background-color:rgb(108, 206, 149);\n"
            "}\n"
"#pushButton_finish:pressed\n"
"{\n"
"background-color:rgb(69, 131, 95);\n"
"padding-left:3px;\n"
"padding-top:3px;\n"
"}")
        self.pushButton_finish.setObjectName("pushButton_finish")
        self.pushButton_finish.clicked.connect(self.backView)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.Exit.clicked.connect(self.backView)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Exit.setText(_translate("MainWindow", "X"))
        self.pushButton_finish.setText(_translate("MainWindow", "完成"))

    def add_shadow(self):
        # 添加阴影
        self.effect_shadow = QtWidgets.QGraphicsDropShadowEffect(self)
        self.effect_shadow.setOffset(0, 0)  # 偏移
        self.effect_shadow.setBlurRadius(10)  # 阴影半径
        self.effect_shadow.setColor(QColor(78, 148, 107, 100))  # 阴影颜色

        # self.effect_shadow.setColor(QColor(100, 100, 100, 90))  # 阴影颜色
        self.background.setGraphicsEffect(self.effect_shadow)  # 将设置套用到widget窗口中
        self.effect_shadow.setColor(QColor(100, 100, 100, 90))  # 阴影颜色
        self.pushButton_finish.setGraphicsEffect(self.effect_shadow)  # 将设置套用到widget窗口中

if __name__ == '__main__':
    app = QApplication(sys.argv)
    mainWindow = Finish_Window()  # MainWindow1随便改
    mainWindow.show()
    sys.exit(app.exec_())